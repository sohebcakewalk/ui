{
  "name": "badge",
  "files": [
    {
      "name": "badge.tsx",
      "content": "import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\nimport { Icon, IconType } from \"./icon\"\nimport { colors } from \"./helper/types\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center font-medium\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"gap-x-1.5 rounded-md bg-primary text-primary-foreground ring-1 ring-inset\",\n        flat:\n          \"rounded-md bg-primary text-primary-foreground\",\n        borderPill: \"rounded-full bg-primary text-primary-foreground ring-1 ring-inset\",\n        flatPill: \"rounded-full bg-primary text-primary-foreground\",\n        outline: \"rounded-md ring-1 ring-inset ring-gray-200\",\n        dot: \"gap-x-1.5 rounded-md ring-1 ring-inset ring-gray-200\"\n      },\n      fontSize: {\n        xs: 'text-xs',\n        sm: 'text-sm',\n        md: 'text-base',\n        lg: 'text-lg',\n        xl: 'text-xl',\n      },\n      size: {\n        default: \"px-2 py-1\",\n        sm: \"px-1.5 py-0.5\",\n      },\n      rounded: {\n        sm: \"rounded-sm\",\n        md: \"rounded-md\",\n        lg: \"rounded-lg\",\n        xl: \"rounded-xl\",\n        full: \"rounded-full\",\n        none: \"rounded-none\",\n      }\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n      fontSize: \"xs\",\n      rounded: \"md\"\n    },\n  }\n)\n\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n  VariantProps<typeof badgeVariants> {\n  icon?: IconType;\n  alignIcon?: \"left\" | \"right\";\n  iconStyle?: string;\n  color?: colors;\n}\n\nfunction Badge({ children, className, variant, fontSize, size, icon, alignIcon, iconStyle, rounded, color, ...props }: BadgeProps) {\n  const badgeColor = (color?: colors) => {\n    return `bg-${color}-50 text-${color}-600 ring-${color}-500/10`;\n  }\n  return (\n    <div className={cn(badgeVariants({ variant, fontSize, size, rounded }), className, badgeColor(color))} {...props}>\n      {typeof icon === \"string\" && <Icon className={`${alignIcon === \"right\" ? \"order-2 ml-1\" : \"mr-1\"} ${iconStyle}`} name={icon} />}\n      {children}\n    </div>\n  )\n}\n\nexport { Badge, badgeVariants }\n"
    }
  ],
  "type": "components:ui"
}