{
  "name": "dialog",
  "dependencies": [
    "@radix-ui/react-dialog"
  ],
  "files": [
    {
      "name": "dialog.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { cn } from \"@/lib/utils\"\nimport { Icon, IconType } from \"@/registry/tui/ui/icon\"\nimport { CardFooter, CardTitle } from \"@/registry/tui/ui/card\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger;\n\nconst DialogPortal = ({\n  className,\n  ...props\n}: DialogPrimitive.DialogPortalProps) => (\n  <DialogPrimitive.Portal className={cn(className)} {...props} />\n)\nDialogPortal.displayName = DialogPrimitive.Portal.displayName\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-background/80 backdrop-blur-sm data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  { hideCloseIcon?: boolean } &\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, hideCloseIcon, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[75%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 px-2 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:top-[50%] sm:rounded-lg md:w-full\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      {!hideCloseIcon && <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-full p-0 opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <Icon name=\"xmark-light\" className=\"h-4 w-4 p-0\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>}\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst SlideOverContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n  & {\n    panelWidth?: 'xs' | 'sm' | 'md' | 'lg' | '2xl' | '5xl' | '7xl',\n    disableYscroll?: boolean,\n    fixedTitle?: boolean,\n    iconName?: IconType,\n    closeIconPosition?: 'left' | 'right',\n    brandHeader?: boolean,\n    brandStyle?: string,\n    fixedFooter?: boolean,\n    footerContent?: any\n  }\n>(({ className, children, panelWidth = '5xl', disableYscroll = false, fixedTitle = false, iconName, closeIconPosition = \"right\", brandHeader = false, brandStyle, fixedFooter, footerContent, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        `fixed right-0 top-0 z-50 grid h-full w-full ${panelWidth ? 'max-w-' + panelWidth : 'max-w-5xl'} gap-4 ${disableYscroll ? 'overflow-hidden' : 'overflow-y-scroll'}\n\n        border bg-background shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0\n        data-[state=open]:fade-in-0 data-[state=closed]:slide-out-to-right-[48%] data-[state=open]:slide-in-from-right-[48%] sm:rounded-l-lg md:w-full`,\n        className\n      )}\n      {...props}\n    >\n      <div className={`flex h-full flex-col ${fixedFooter ? 'overflow-hidden' : ''}`}>\n        <div className={`flex ${closeIconPosition === 'left' ? 'flex-row-reverse' : 'flex-row'} z-40 h-20 items-center justify-between ${brandHeader ? 'px-4 py-12 ' + brandStyle : ''}`}>\n          <CardTitle className={`${fixedTitle ? 'fixed w-full border-b-2 bg-white p-6' : 'p-4'} text-base font-semibold leading-6`}>\n            Panel title\n          </CardTitle>\n          <DialogPrimitive.Close className={`${fixedTitle ? 'fixed' : 'absolute'} ${closeIconPosition === 'left' ? 'left-4' : 'right-4'} top-6 rounded-sm opacity-70 transition-opacity hover:opacity-100\n          focus:outline-none disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground`}>\n            <Icon name={iconName ?? \"xmark-solid\"} className=\"h-4 w-4 p-0\" />\n            <span className=\"sr-only\">Close</span>\n          </DialogPrimitive.Close>\n        </div>\n        <div className={`${brandHeader ? 'px-4' : 'px-0'} px-2 ${fixedFooter ? 'overflow-y-scroll' : ''}`}>\n          {children}\n        </div>\n        {footerContent && <CardFooter className={`${fixedFooter ? 'absolute bottom-0 right-0 w-full border-t-2 bg-white p-6' : ''} flex items-center justify-between text-base`}>\n          {footerContent}\n        </CardFooter>}\n      </div>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nSlideOverContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n  SlideOverContent\n}\n"
    }
  ],
  "type": "components:ui"
}